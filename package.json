{
  "name": "testrenovate",
  "version": "2.3.12",
  "description": "Fullstack application that serves the Smartforecating Application",
  "main": "server/index.js",
  "scripts": {
    "pretest": "rm -rf coverage/* .nyc_output *.log xunit.xml",
    "test": "nyc --reporter=lcov --reporter=text-lcov npm run sonar-report",
    "sonar-report": "NODE_ENV=test NODE_TLS_REJECT_UNAUTHORIZED=0 babel-node ./node_modules/.bin/mocha --exit --recursive --reporter mocha-sonarqube-reporter --reporter-options output=xunit.xml --require ./server/tests/helpers/globals.js --require ./server/tests/helpers/interceptors.js --require ./node_modules/@babel/register server/tests/*.spec.js",
    "prejson:clean": "cp package.json $BUILD_PATH/package.json && cp process.yml $BUILD_PATH/process.yml",
    "json:clean": "json -I -f $BUILD_PATH/package.json -e 'delete this.devDependencies;delete this[\"pre-commit\"]; delete this[\"lint-staged\"];this.scripts = {start: \"node ./server\"};'",
    "prod": "NODE_ENV=production node server",
    "clean:dist": "rm -rf $BUILD_PATH dist.zip",
    "build:server": "babel server -d $BUILD_PATH/server --copy-files",
    "build:client": "cd client && NODE_ENV=production npm run build",
    "prebuild": "npm run clean:dist && npm run flowinstall",
    "flowinstall": "./node_modules/flow-typed/dist/cli.js install",
    "build": "npm run build:server && npm run build:client",
    "postbuild": "npm run json:clean && cp -rf certs $BUILD_PATH",
    "lint": "npm run lint:fix -- .",
    "lint:staged": "lint-staged",
    "lint:server": "eslint --fix server; exit 0;",
    "lint:fix": "DEBUG=eslint:cli-engine eslint --ignore-path .eslintignore  --fix",
    "dev": "concurrently  \"PORT=3001 nodemon server\" \"cd client && npm start\" ",
    "dev-client-build": "nodemon -w client --exec \"cd client && npm run dev-build\"",
    "dev-server-build": "nodemon -w server --exec \"npm run build:server\"",
    "dev-server": "nodemon -w local --exec \"NODE_ENV=production node local/server\"",
    "local": "concurrently \"npm run dev-client-build\" \"npm run dev-server-build\" \"sleep 5 && npm run dev-server\"",
    "forever": "forever -e /var/log/euclid/error.log -o /var/log/euclid/out.log server",
    "presetup": "rm -rf node_modules && cd client && rm -rf node_modules && cd ..",
    "setup": "yarn && cd client && yarn && cd ..",
    "preproduction": "npm run build",
    "production": "cd dist && PORT=8080 NODE_ENV=production node server",
    "test:server": "NODE_ENV=test NODE_TLS_REJECT_UNAUTHORIZED=0 mocha --exit --require ./server/tests/helpers/globals.js --require ./server/tests/helpers/interceptors.js --require @babel/register server/tests/*.spec.js",
    "report": "nyc npm run test:server",
    "predockerize": "rm -rf $BUILD_PATH && NODE_ENV=production npm run build",
    "dockerize": "docker build --build-arg SOURCE_PATH=\"$BUILD_PATH/\" --build-arg VERSION=$npm_package_version -t euclid-app-ui:$npm_package_version . && echo \"Built as euclid-app-ui:$npm_package_version\"",
    "postdockerize": "numimages=$(docker images -aq -f \"dangling=true\" | wc -l | tr -d ' '); if [[ $numimages > 0 ]]; then docker rmi -f $(docker images -aq -f \"dangling=true\"); fi",
    "flow": "flow"
  },
  "pre-commit": "lint:staged",
  "lint-staged": {
    "*.{js,jsx}": [
      "npm run lint:fix --",
      "git add -f"
    ]
  },
  "author": "SmartForecasting <SmartForecastingIDC@email.wal-mart.com>",
  "license": "ISC",
  "devDependencies": {
    "@babel/cli": "7.1.5",
    "@babel/core": "7.1.6",
    "@babel/node": "7.2.2",
    "@babel/plugin-proposal-class-properties": "7.2.3",
    "@babel/plugin-transform-arrow-functions": "7.0.0",
    "@babel/plugin-transform-runtime": "7.1.0",
    "@babel/plugin-transform-spread": "7.0.0",
    "@babel/preset-env": "7.1.6",
    "@babel/preset-flow": "7.0.0",
    "@babel/register": "7.0.0",
    "assert-promise": "0.0.3",
    "babel-eslint": "10.0.1",
    "babel-loader": "8.0.4",
    "babel-plugin-add-module-exports": "1.0.0",
    "chai": "4.2.0",
    "chai-as-promised": "7.1.1",
    "coffeescript": "2.3.2",
    "concurrently": "4.1.0",
    "eslint": "5.9.0",
    "eslint-config-airbnb": "17.1.0",
    "eslint-config-react-app": "3.0.5",
    "eslint-plugin-flowtype": "3.2.0",
    "eslint-plugin-import": "2.14.0",
    "eslint-plugin-jsx-a11y": "6.1.2",
    "eslint-plugin-prettier": "3.0.0",
    "eslint-plugin-react": "7.11.1",
    "eslint-plugin-react-hooks": "2.1.2",
    "flow-bin": "0.108.0",
    "flow-typed": "2.6.1",
    "fs-extra": "7.0.1",
    "json": "9.0.6",
    "lint-staged": "8.1.0",
    "mocha": "5.2.0",
    "mocha-sonarqube-reporter": "1.0.1",
    "nock": "10.0.2",
    "node-http-proxy": "0.2.3",
    "npm-watch": "0.5.0",
    "nyc": "13.1.0",
    "pre-commit": "1.2.2",
    "prettier": "1.15.3",
    "proxyquire": "2.1.0",
    "rimraf": "2.6.2",
    "should": "13.2.3",
    "sinon": "7.1.1",
    "supertest": "3.3.0",
    "webpack-md5-hash": "0.0.6"
  },
  "dependencies": {
    "@babel/polyfill": "7.0.0",
    "@babel/runtime": "7.1.5",
    "applicationinsights": "1.4.0",
    "axios": "0.18.0",
    "axios-retry": "3.1.1",
    "babel-eslint": "10.0.1",
    "babel-plugin-add-module-exports": "1.0.0",
    "body-parser": "1.18.3",
    "compression": "1.7.3",
    "cookie-parser": "1.4.3",
    "cors": "2.8.5",
    "crypto-js": "3.1.9-1",
    "dotenv": "6.2.0",
    "electrode-csrf-jwt": "1.5.1",
    "express": "4.16.4",
    "express-rate-limit": "6.2.0",
    "express-static-gzip": "1.1.3",
    "helmet": "3.15.1",
    "helmet-csp": "2.7.1",
    "http": "0.0.0",
    "https": "1.0.0",
    "json": "9.0.6",
    "jsonwebtoken": "8.4.0",
    "lodash": "4.17.11",
    "moment": "2.22.2",
    "moment-timezone": "0.5.23",
    "morgan": "1.9.1",
    "multer": "1.4.1",
    "multiparty": "4.2.1",
    "node-ttl": "0.0.6",
    "nodemon": "1.18.10",
    "passport": "0.4.0",
    "passport-saml": "1.0.0",
    "path": "0.12.7",
    "properties-reader": "0.0.16",
    "qs": "6.6.0",
    "random-int": "1.0.0",
    "redis": "2.8.0",
    "request": "2.88.0",
    "requestretry": "4.0.0",
    "response-time": "2.3.2",
    "retry-axios": "0.3.2",
    "rimraf": "2.6.2",
    "rxjs": "6.3.3",
    "shelljs": "0.8.3",
    "util": "0.11.1",
    "uuid": "3.3.2",
    "webpack-md5-hash": "0.0.6",
    "winston": "3.1.0",
    "winston-azure-application-insights": "2.0.0"
  },
  "nyc": {
    "include": [
      "server/**/*.js"
    ],
    "exclude": [
      "server/tests/**/*.js"
    ],
    "all": true
  }
}
